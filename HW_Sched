import java.util.*;

public class Kruskal{

    public static WGraph kruskal(WGraph g){
	WGraph isMst = new WGraph();
    DisjointSets sets = new DisjointSets(g.getNbNodes());
    
    int size = g.listOfEdgesSorted().size();
    int i =0;
    
    while(i<size) {
    		Edge lightEdge = g.listOfEdgesSorted().get(i);
    		if(IsSafe(sets,lightEdge) == true) {
    			isMst.addEdge(lightEdge);
    			sets.union(lightEdge.nodes[0], lightEdge.nodes[1]); //create link between the nodes of the edges
    			i++; 
    		}
    }
    
    return isMst;
}

		
    

    public static Boolean IsSafe(DisjointSets p, Edge e){

    	return ((p.find(e.nodes[0])) != (p.find(e.nodes[1])));  
    
    }

    public static void main(String[] args){
    	
        String file = args[0];
        WGraph g = new WGraph(file);
        WGraph t = kruskal(g);
        System.out.println(t);

   } 
}
